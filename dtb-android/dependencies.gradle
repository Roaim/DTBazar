ext {
    def kotlin_version = '1.3.72'
    def nav_version = "2.2.2"
    def androidx_version = '1.1.0'
    def ktx_version = '1.2.0'
    def lifecycle_version = "2.2.0"
    def paging_version = "2.1.2"
    def coroutines_version = "1.3.6" // 1.3.2 @retrofit
    def room_version = '2.2.5'
    def RetrofitVersion = '2.8.1'
    def OkHttpVersion = '3.14.7'
    def dagger2_version = '2.27'
    def RxAndroidVersion = '2.0.1'
    def RxJavaVersion = '2.1.3'
    def RxKotlinVersion = '2.1.0'
    def glide_version = '4.11.0'

    deps = [:]

    classpathDependencies = [
            gradle          : 'com.android.tools.build:gradle:3.6.3',
            kotlinPlugin    : "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version",
            navSafeArgPlugin: "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
    ]

    deps.classpath = classpathDependencies

    generalDependencies = [
            kotlin          : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            appCompat       : "androidx.appcompat:appcompat:$androidx_version",
            androidxCore    : "androidx.core:core-ktx:$ktx_version",
            vectorDrawable  : "androidx.vectordrawable:vectordrawable:$androidx_version",
            materialDesign  : 'com.google.android.material:material:1.1.0',
            constraintLayout: 'androidx.constraintlayout:constraintlayout:1.1.3'
    ]

    deps.general = generalDependencies

    navigationDependencies = [
            fragmentKtx: "androidx.navigation:navigation-fragment-ktx:$nav_version",
            uiKtx      : "androidx.navigation:navigation-ui-ktx:$nav_version",
    ]

    deps.nav = navigationDependencies

    navigationExtraDependencies = [
            runtime                          : "androidx.navigation:navigation-runtime-ktx:$nav_version",
            // Dynamic Feature Module Support
            dynamicModuleDependency: "androidx.navigation:navigation-dynamic-features-fragment:$nav_version",
            // Testing Navigation
            androidTest            : "androidx.navigation:navigation-testing:$nav_version"
    ]

    deps.navExtra = navigationExtraDependencies

    lifecycleDependencies = [
            // ViewModel only
            viewmodel: "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
            // LiveData only
            livedata : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
    ]

    deps.lifecycle = lifecycleDependencies

    lifecycleExtraDependencies = [
            // deprecated
            extension  : "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
            // Lifecycle only (without ViewModel or LiveData)
            lifecycle  : "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version",
            // Saved state module for ViewModel
            savedState : "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version",
            // alternately - if using Java8, use the following instead of lifecycle-compiler
            commonJava8: "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    ]

    deps.lifecycleExtra = lifecycleExtraDependencies

    pagingDependencies = [
            runtime: "androidx.paging:paging-runtime-ktx:$paging_version"
    ]

    deps.paging = pagingDependencies

    pagingExtraDependencies = [
            // alternatively - without Android dependencies for testing
            common: "androidx.paging:paging-common-ktx:$paging_version" // For Kotlin use paging-common-ktx
    ]

    deps.pagingExtra = pagingExtraDependencies

    coroutinesDependencies = [
            core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version",
            android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version",
    ]

    deps.coroutines = coroutinesDependencies

    roomDependencies = [
            runtime: "androidx.room:room-runtime:$room_version",
            ktx    : "androidx.room:room-ktx:$room_version"
    ]

    deps.room = roomDependencies

    playDependencies = [
            core: "com.google.android.play:core-ktx:1.7.2"
    ]

    deps.play = playDependencies

    retrofitDependencies = [
            retrofit             : "com.squareup.retrofit2:retrofit:${RetrofitVersion}",
            retrofitGsonConverter: "com.squareup.retrofit2:converter-gson:${RetrofitVersion}",
            okHttp3              : "com.squareup.okhttp3:okhttp:${OkHttpVersion}",
            okHttp3Logging       : "com.squareup.okhttp3:logging-interceptor:${OkHttpVersion}"
    ]

    deps.retrofit = retrofitDependencies

    rxJavaDependencies = [
            rxJava         : "io.reactivex.rxjava2:rxjava:${RxJavaVersion}",
            rxKotlin       : "io.reactivex.rxjava2:rxkotlin:${RxKotlinVersion}",
            rxAndroid      : "io.reactivex.rxjava2:rxandroid:${RxAndroidVersion}",
            retrofitAdapter: "com.squareup.retrofit2:adapter-rxjava2:${RetrofitVersion}",
            lifecycle      : "androidx.lifecycleOwner:lifecycleOwner-reactivestreams-ktx:$lifecycle_version"
    ]

    deps.rxJava = rxJavaDependencies

    daggerDependencies = [
            runtime       : "com.google.dagger:dagger:$dagger2_version",
            android       : "com.google.dagger:dagger-android:$dagger2_version",
            androidSupport: "com.google.dagger:dagger-android-support:$dagger2_version"
    ]

    deps.dagger = daggerDependencies

    testDependencies = [
            junit        : 'junit:junit:4.13',
            androidx     : "androidx.arch.core:core-testing:2.1.0",
            mockitoCore  : 'org.mockito:mockito-core:2.27.0',
            mockitoInline: 'org.mockito:mockito-inline:2.13.0',
            coroutines   : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version",
            room         : "androidx.room:room-testing:$room_version"
    ]

    deps.javaTest = testDependencies

    androidTestDependencies = [
            androidx : 'androidx.test.ext:junit:1.1.1',
            espresson: 'androidx.test.espresso:espresso-core:3.2.0'
    ]

    deps.androidTest = androidTestDependencies

    kaptDependencies = [
            lifecycle    : "androidx.lifecycle:lifecycle-compiler:$lifecycle_version",
            room         : "androidx.room:room-compiler:$room_version",
            dagger       : "com.google.dagger:dagger-compiler:$dagger2_version",
            daggerAndroid: "com.google.dagger:dagger-android-processor:$dagger2_version"
    ]

    deps.kapt = kaptDependencies

    deps.kaptExt = [
            glide: "com.github.bumptech.glide:compiler:$glide_version"
    ]

    // Versions for misc dependencies
    def preference_version = "1.1.1"

    miscDependencies = [
            preference: "androidx.preference:preference-ktx:$preference_version",
            security  : "androidx.security:security-crypto:1.0.0-rc01",
            facebook  : 'com.facebook.android:facebook-login:[5,6)',
            glide     : "com.github.bumptech.glide:glide:$glide_version"
    ]

    deps.misc = miscDependencies
}